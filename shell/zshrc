source ~/dotfiles/shell/shell_common.sh

bindkey -e

HISTFILE=~/.history
HISTSIZE=1000
SAVEHIST=1000
# not to save duplicated histry
setopt hist_ignore_dups
setopt share_history

zstyle :compinstall filename '~/.zshrc'

DIRSTACKSIZE=100
disable r

# Enable cdr, add-zsh-hook
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs

# cdr
zstyle ':completion:*' recent-dirs-insert both
zstyle ':chpwd:*' recent-dirs-max 500
zstyle ':chpwd:*' recent-dirs-default true

# History
bindkey "^r" history-incremental-pattern-search-backward
bindkey "^s" history-incremental-pattern-search-forward
autoload -Uz history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^n" history-beginning-search-forward-end
bindkey "^p" history-beginning-search-backward-end

autoload -Uz edit-command-line
zle -N edit-command-line
bindkey '^f' edit-command-line

# execution without the command
alias -s rb='ruby'
alias -s py='python'
alias -s php='php -f'

setopt print_eight_bit
setopt globdots
# correct spell
setopt correct
# evaluate prompt every time
setopt prompt_subst
setopt AUTO_PUSHD
# enable comments in interactive terminal
setopt interactivecomments

autoload -Uz colors; colors

# completions
zstyle ':completion:*' menu select=2
zstyle ':completion:*' verbose yes
zstyle ':completion:*' completer _ssh _complete _match _approximate _prefix _list _expand _history
zstyle ':completion:*:messages' format ${fg_bold[yellow]}'%d'${reset_color}
zstyle ':completion:*:warnings' format ${fg[red]}'No matches for:'${fg[yellow]}' %d'${reset_color}
zstyle ':completion:*:descriptions' format ${fg[yellow]}'%B%d%b'${reset_color}
zstyle ':completion:*:corrections' format ${fg_bold[yellow]}'%B%d '${fg[red]}'(errors: %e)%b'${reset_color}
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' use-cache true
zstyle ':completion:*:manuals' separate-sections true
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*:*files' ignored-patterns '*?.o' '*?~' '*\#'
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}


# ----- PROMPT -----
## PROMPT
PROMPT=$'\n${fg[blue]}%~${reset_color}\n> ' # %~: pwd

# ----- Functions ------

# zmv
autoload -Uz zmv

# Plugins
if [[ -f ~/.zplug/init.zsh ]]; then
    source ~/.zplug/init.zsh
    zplug mafredri/zsh-async, from:github
    zplug sindresorhus/pure, use:pure.zsh, from:github, as:theme
    zplug load

    # Pure theme
    PURE_PROMPT_SYMBOL='>'
    RPROMPT=''
else
    autoload -Uz compinit
    compinit
fi

# fzf
if [[ -f ~/.fzf.zsh ]]; then
    source ~/.fzf.zsh
    export FZF_DEFAULT_OPTS='--reverse --bind "ctrl-j:abort,space:toggle+down" --height=50%'

    # cd
    function pr {
        eval local selected_dir=$(find . -type d 2>/dev/null | fzf)
        if [[ -n $selected_dir ]]; then
            cd "${selected_dir}"
        fi
    }
    function ph {
        eval local selected_dir=$(cdr -l | tr -s ' ' | cut -d ' ' -f 2 | fzf)
        if [[ -n $selected_dir ]]; then
            cd "${selected_dir}"
        fi
    }
fi

# Man page using vim
vman() {
    if [ -z $1 ]; then
        echo "What manual page do you want?"
        return 1
    fi
    vim "-c Man $1 | only"
}

